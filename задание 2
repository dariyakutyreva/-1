#Кутырева Дарья Евгеньевна — создайте модель множественной линейной регрессии ночных потоков 
#углекислого газа за осенний период 2013 года по данным измерений методом турбулентной пульсации

rm(list=ls())
library("tidyverse") 
library("readr")     
library("stringr")   
library("dplyr")     
library("ggplot2") 
library("tidyr")
library("stringr")
library("lubridate")

#считываем файл,пропускаем первую строчку
#заменяем все не числовые значения на NA, исключая строчки с символом "["
tbl = read_csv("eddypro.csv", skip = 1, na =c("","NA","-9999","-9999.0"), comment=c("["))
#Подготовка к анализу
tbl = tbl[-1,]; tbl
tbl = select(tbl, -(roll))
tbl = tbl %>% mutate_if(is.character, factor)
names(tbl) = names(tbl) %>% 
  str_replace_all("[!]","_emph_") %>% 
  str_replace_all("[?]","_quest_") %>% 
  str_replace_all("[*]","_star_") %>% 
  str_replace_all("[+]","_plus_") %>%
  str_replace_all("[-]","_minus_") %>%
  str_replace_all("[@]","_at_") %>%
  str_replace_all("[$]","_dollar_") %>%
  str_replace_all("[#]","_hash_") %>%
  str_replace_all("[/]","_div_") %>%
  str_replace_all("[%]","_perc_") %>%
  str_replace_all("[&]","_amp_") %>%
  str_replace_all("[\\^]","_power_") %>%
  str_replace_all("[()]","_") 
glimpse(tbl)
#фильтруем данные для нашего варианта
tbl = filter(tbl,DOY >= 244 & DOY <= 334)
tbl = filter(tbl, daytime ==FALSE)
#корелляционный анализ
tbl_numeric = tbl[,sapply(tbl,is.numeric) ]
cor_td = cor(drop_na(tbl_numeric), method = "spearman") %>% as.data.frame %>% select(co2_flux)
vars = row.names(cor_td)[cor_td$co2_flux^2 > 0.2] %>% na.exclude
formula = as.formula(paste("co2_flux~", paste(vars,collapse = "+"), sep=""));formula
row_numbers = 1:length(tbl_numeric$co2_flux)
teach = sample(row_numbers, floor(length(tbl_numeric$co2_flux)*.7))
test = row_numbers[-teach]
teaching_tbl = tbl_numeric[teach,]
testing_tbl = tbl_numeric[test,]
#создадим модели,проводя их анализ для выявления наиболее оптимальной
model0=lm(co2_flux ~ (rand_err_co2_flux + h2o_molar_density + 
          h2o_mole_fraction + h2o_mixing_ratio + air_pressure + air_density + 
          air_heat_capacity + air_molar_volume + water_vapor_density + 
          e + specific_humidity + Tdew + un_co2_flux + co2_var + w_div_co2_cov + 
          h2o...126 + h2o...128 + flowrate), data = teaching_tbl)

  coef(model0)
  resid(model0)
  confint(model0)
  summary(model0)
  anova(model0)

model1=lm(co2_flux ~ (rand_err_co2_flux + h2o_molar_density + h2o_mole_fraction + 
                      h2o_mixing_ratio + air_pressure + air_density + 
                      air_heat_capacity + air_molar_volume + water_vapor_density + 
                      e + Tdew + un_co2_flux), data = teaching_tbl)
  coef(model1)
  resid(model1)
  confint(model1)
  summary(model1)
  anova(model1)
  anova(model1, model0)

model2=lm(co2_flux ~ (rand_err_co2_flux + h2o_molar_density + h2o_mole_fraction + 
                      h2o_mixing_ratio + air_pressure + air_density + 
                      air_heat_capacity + air_molar_volume + water_vapor_density + 
                      e + un_co2_flux), data = teaching_tbl)

  coef(model2)
  resid(model2)
  confint(model2)
  summary(model2)
  anova(model2)
  anova(model2, model1)

model3=lm(co2_flux ~ (rand_err_co2_flux + h2o_molar_density + 
                      h2o_mole_fraction + h2o_mixing_ratio + air_pressure + air_density + 
                      air_heat_capacity + air_molar_volume + water_vapor_density + 
                      e + un_co2_flux)^3, data = teaching_tbl)
  coef(model3)
  resid(model3)
  confint(model3)
  summary(model3)
  anova(model3)
  anova(model3, model2)

model4=lm(co2_flux ~ (rand_err_co2_flux + h2o_molar_density + h2o_mole_fraction + 
                      h2o_mixing_ratio + air_pressure + air_density + 
                      air_heat_capacity + air_molar_volume + water_vapor_density + 
                      e + un_co2_flux)^2, data = teaching_tbl)
  coef(model4)
  resid(model4)
  confint(model4)
  summary(model4)
  anova(model4)
  anova(model4, model3)

model5=lm(co2_flux ~ (rand_err_co2_flux + h2o_molar_density + h2o_mole_fraction +
                       h2o_mixing_ratio + air_pressure + air_density + 
                       air_heat_capacity + air_molar_volume + water_vapor_density + 
                       e + un_co2_flux)^2 - rand_err_co2_flux:h2o_molar_density - rand_err_co2_flux:h2o_mole_fraction - 
                       rand_err_co2_flux:air_pressure - rand_err_co2_flux:air_density -
                       rand_err_co2_flux:air_heat_capacity - rand_err_co2_flux:water_vapor_density - rand_err_co2_flux:e -
                       rand_err_co2_flux:un_co2_flux -  h2o_molar_density:h2o_mole_fraction -
                       h2o_molar_density:air_pressure - h2o_molar_density:air_density -
                       h2o_molar_density:air_heat_capacity - h2o_molar_density:air_molar_volume -
                       air_pressure:water_vapor_density - air_pressure:e - air_density:water_vapor_density -
                       air_density:water_vapor_density - air_density:un_co2_flux - air_heat_capacity:un_co2_flux -
                       air_molar_volume:un_co2_flux - water_vapor_density:e - water_vapor_density:un_co2_flux -
                       e:un_co2_flux, data = teaching_tbl)
  coef(model5)
  resid(model5)
  confint(model5)
  summary(model5)
  anova(model5)
  anova(model5, model4)

model6=lm(co2_flux ~ (rand_err_co2_flux + h2o_molar_density + h2o_mole_fraction +
            h2o_mixing_ratio + air_pressure + air_density + 
            air_heat_capacity + air_molar_volume + water_vapor_density + 
            e + un_co2_flux)^2 - rand_err_co2_flux:h2o_molar_density - rand_err_co2_flux:h2o_mole_fraction - 
            rand_err_co2_flux:air_pressure - rand_err_co2_flux:air_density -
            rand_err_co2_flux:air_heat_capacity - rand_err_co2_flux:water_vapor_density - rand_err_co2_flux:e -
            rand_err_co2_flux:un_co2_flux -  h2o_molar_density:h2o_mole_fraction -
            h2o_molar_density:air_pressure - h2o_molar_density:air_density -
            h2o_molar_density:air_heat_capacity - h2o_molar_density:air_molar_volume -
            air_pressure:water_vapor_density - air_pressure:e - air_density:water_vapor_density -
            air_density:water_vapor_density - air_density:un_co2_flux - air_heat_capacity:un_co2_flux -
            air_molar_volume:un_co2_flux - water_vapor_density:e - water_vapor_density:un_co2_flux -
            e:un_co2_flux - rand_err_co2_flux:h2o_mixing_ratio - rand_err_co2_flux:air_molar_volume - 
            h2o_molar_density:h2o_mixing_ratio - h2o_molar_density:e - h2o_molar_density:un_co2_flux - 
            h2o_mole_fraction:air_pressure - h2o_mole_fraction:air_heat_capacity - h2o_mole_fraction:air_molar_volume - 
            h2o_mole_fraction:water_vapor_density - h2o_mole_fraction:e - h2o_mole_fraction:un_co2_flux -
            h2o_mixing_ratio:air_molar_volume - h2o_mixing_ratio:water_vapor_density - h2o_mixing_ratio:e -
            h2o_mixing_ratio:un_co2_flux  - air_pressure:air_density - air_pressure:air_heat_capacity -
            air_density:e, data = teaching_tbl)
  coef(model6)
  resid(model6)
  confint(model6)
  summary(model6)
  anova(model6)
  anova(model6, model5)

model7=lm(co2_flux ~ (rand_err_co2_flux + h2o_molar_density + h2o_mole_fraction +
                 h2o_mixing_ratio + air_pressure + air_density + air_heat_capacity + 
                 air_molar_volume + water_vapor_density + 
                 e + un_co2_flux)^2 - rand_err_co2_flux:h2o_molar_density - rand_err_co2_flux:h2o_mole_fraction - 
                 rand_err_co2_flux:air_pressure - rand_err_co2_flux:air_density -
                 rand_err_co2_flux:air_heat_capacity - rand_err_co2_flux:water_vapor_density - rand_err_co2_flux:e -
                 rand_err_co2_flux:un_co2_flux -  h2o_molar_density:h2o_mole_fraction -
                 h2o_molar_density:air_pressure - h2o_molar_density:air_density -
                 h2o_molar_density:air_heat_capacity - h2o_molar_density:air_molar_volume -
                 air_pressure:water_vapor_density - air_pressure:e - air_density:water_vapor_density -
                 air_density:water_vapor_density - air_density:un_co2_flux - air_heat_capacity:un_co2_flux -
                 air_molar_volume:un_co2_flux - water_vapor_density:e - water_vapor_density:un_co2_flux -
                 e:un_co2_flux - rand_err_co2_flux:h2o_mixing_ratio - rand_err_co2_flux:air_molar_volume - 
                 h2o_molar_density:h2o_mixing_ratio - h2o_molar_density:e - h2o_molar_density:un_co2_flux - 
                 h2o_mole_fraction:air_pressure - h2o_mole_fraction:air_heat_capacity - h2o_mole_fraction:air_molar_volume - 
                 h2o_mole_fraction:water_vapor_density - h2o_mole_fraction:e - h2o_mole_fraction:un_co2_flux -
                 h2o_mixing_ratio:air_molar_volume - h2o_mixing_ratio:water_vapor_density - h2o_mixing_ratio:e -
                 h2o_mixing_ratio:un_co2_flux  - air_pressure:air_density - air_pressure:air_heat_capacity -
                 air_density:e - h2o_mixing_ratio:air_pressure - h2o_mixing_ratio:air_density - 
                 h2o_mixing_ratio:air_heat_capacity - air_pressure:air_molar_volume - air_pressure:un_co2_flux -
                 air_heat_capacity:air_molar_volume - air_heat_capacity:e  - air_molar_volume:e , data = teaching_tbl)
  coef(model7)
  resid(model7)
  confint(model7)
  summary(model7)
  anova(model7)
  anova(model7, model6)

model8=lm(co2_flux ~ (rand_err_co2_flux + h2o_molar_density + 
            h2o_mole_fraction + h2o_mixing_ratio + air_pressure + air_density + 
            air_heat_capacity + air_molar_volume + water_vapor_density + 
            e + un_co2_flux)^2 - rand_err_co2_flux:h2o_molar_density - rand_err_co2_flux:h2o_mole_fraction - 
            rand_err_co2_flux:air_pressure - rand_err_co2_flux:air_density -
            rand_err_co2_flux:air_heat_capacity - rand_err_co2_flux:water_vapor_density - rand_err_co2_flux:e -
            rand_err_co2_flux:un_co2_flux -  h2o_molar_density:h2o_mole_fraction -
            h2o_molar_density:air_pressure - h2o_molar_density:air_density -
            h2o_molar_density:air_heat_capacity - h2o_molar_density:air_molar_volume -
            air_pressure:water_vapor_density - air_pressure:e - air_density:water_vapor_density -
            air_density:water_vapor_density - air_density:un_co2_flux - air_heat_capacity:un_co2_flux -
            air_molar_volume:un_co2_flux - water_vapor_density:e - water_vapor_density:un_co2_flux -
            e:un_co2_flux - rand_err_co2_flux:h2o_mixing_ratio - rand_err_co2_flux:air_molar_volume - 
            h2o_molar_density:h2o_mixing_ratio - h2o_molar_density:e - h2o_molar_density:un_co2_flux - 
            h2o_mole_fraction:air_pressure - h2o_mole_fraction:air_heat_capacity - h2o_mole_fraction:air_molar_volume - 
            h2o_mole_fraction:water_vapor_density - h2o_mole_fraction:e - h2o_mole_fraction:un_co2_flux -
            h2o_mixing_ratio:air_molar_volume - h2o_mixing_ratio:water_vapor_density - h2o_mixing_ratio:e -
            h2o_mixing_ratio:un_co2_flux  - air_pressure:air_density - air_pressure:air_heat_capacity -
            air_density:e - h2o_mixing_ratio:air_pressure - h2o_mixing_ratio:air_density - 
            h2o_mixing_ratio:air_heat_capacity - air_pressure:air_molar_volume - air_pressure:un_co2_flux -
            air_heat_capacity:air_molar_volume - air_heat_capacity:e  - air_molar_volume:e - 
            air_density:air_heat_capacity - air_heat_capacity:water_vapor_density, data = teaching_tbl)
   coef(model8)
   resid(model8)
   confint(model8)
   summary(model8)
   anova(model8)
   anova(model8, model7)
#таким образом выявлена оптимальная модель -  модель 8
